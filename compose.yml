version: '3.9'

services:
  postgres:
    container_name: db
    image: postgres:alpine
    restart: always
    networks:
      - local
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

  migrate:
    container_name: migrate
    image: migrate/migrate
    networks:
      - local
    entrypoint: migrate
    command: "-source ${MIGRATIONS_PATH} -database postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable -verbose up"
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy

  under-armour:
    container_name: under-armour
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - local
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_started
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      MAX_CONCURRENCY: 8
      UA_URL: "https://www.underarmour.com.br/calcados/outlet?initialMap=productclusterids&initialQuery=386&map=category-2,productclusternames"
      AWIN_ID: ${AWIN_ID}
      AWIN_AFFID: ${AWIN_AFFID}


networks:
  local:
    name: local
    driver: bridge